import sys
sys.setrecursionlimit(10**6)
import random
import copy
import time
import matplotlib.pyplot as plt
import pandas as pd
from qs_skrajny import qs_skrajny as qs_skrajny
from qs_srodek import qs_srodek as qs_srodek
from insertion_sort import insertion_sort as insertion_sort

def generate_data():
    algorithms = {'QS (skrajny jako pivot)': qs_skrajny,
                  'QS (środkowy jako pivot)': qs_srodek,
                  'IS': insertion_sort}
    
    data = []
    for n in [1000, 5000, 7500, 10000, 12500, 15000, 18000, 21000, 25000, 28000, 32000]:
        arr = [random.randint(1, n) for i in range(n)]
        row = {'n': n}
        arr.sort()
        for name, sort_func in algorithms.items():
            arr_copy = copy.deepcopy(arr)
            t_start = time.perf_counter()
            sort_func(arr_copy)
            t_end = time.perf_counter()
            t_elapsed = t_end - t_start
            row[name] = t_elapsed
        data.append(row)

    df = pd.DataFrame(data)
    df.to_csv('qs_vs_is_sorted.csv', sep=';', index=False)

    wykres = ['QS (skrajny jako pivot)', 'QS (środkowy jako pivot)', 'IS']
    for name in wykres:
        plt.plot(df['n'], df[name], label=name)
    plt.xlabel('Ilość elementów do posortowania')
    plt.ylabel('Czas sortowania [s]')
    plt.legend()
    plt.show()

generate_data()
